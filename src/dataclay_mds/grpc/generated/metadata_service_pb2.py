# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: metadata_service.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x16metadata_service.proto\"7\n\x11NewAccountRequest\x12\x10\n\x08username\x18\x01 \x01(\t\x12\x10\n\x08password\x18\x02 \x01(\t\"&\n\x12NewAccountResponse\x12\x10\n\x08username\x18\x01 \x01(\t2J\n\x0fMetadataService\x12\x37\n\nnewAccount\x12\x12.NewAccountRequest\x1a\x13.NewAccountResponse\"\x00\x62\x06proto3')



_NEWACCOUNTREQUEST = DESCRIPTOR.message_types_by_name['NewAccountRequest']
_NEWACCOUNTRESPONSE = DESCRIPTOR.message_types_by_name['NewAccountResponse']
NewAccountRequest = _reflection.GeneratedProtocolMessageType('NewAccountRequest', (_message.Message,), {
  'DESCRIPTOR' : _NEWACCOUNTREQUEST,
  '__module__' : 'metadata_service_pb2'
  # @@protoc_insertion_point(class_scope:NewAccountRequest)
  })
_sym_db.RegisterMessage(NewAccountRequest)

NewAccountResponse = _reflection.GeneratedProtocolMessageType('NewAccountResponse', (_message.Message,), {
  'DESCRIPTOR' : _NEWACCOUNTRESPONSE,
  '__module__' : 'metadata_service_pb2'
  # @@protoc_insertion_point(class_scope:NewAccountResponse)
  })
_sym_db.RegisterMessage(NewAccountResponse)

_METADATASERVICE = DESCRIPTOR.services_by_name['MetadataService']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _NEWACCOUNTREQUEST._serialized_start=26
  _NEWACCOUNTREQUEST._serialized_end=81
  _NEWACCOUNTRESPONSE._serialized_start=83
  _NEWACCOUNTRESPONSE._serialized_end=121
  _METADATASERVICE._serialized_start=123
  _METADATASERVICE._serialized_end=197
# @@protoc_insertion_point(module_scope)
